<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="scl__buffer__api_8h" kind="file" language="C++">
    <compoundname>scl_buffer_api.h</compoundname>
    <includes refid="scl__types_8h" local="yes">scl_types.h</includes>
    <includes refid="scl__common_8h" local="yes">scl_common.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="yes">cy_utils.h</includes>
    <includes local="yes">memp.h</includes>
    <includes local="yes">pbuf.h</includes>
    <incdepgraph>
      <node id="8">
        <label>memp.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="6">
        <label>stdlib.h</label>
      </node>
      <node id="2">
        <label>scl_types.h</label>
        <link refid="scl__types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>scl_buffer_api.h</label>
        <link refid="scl__buffer__api_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cy_result.h</label>
      </node>
      <node id="5">
        <label>scl_common.h</label>
        <link refid="scl__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>pbuf.h</label>
      </node>
      <node id="7">
        <label>cy_utils.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="scl__buffer__api_8h_1a170d11659d05b9fae1041771132a52a0" prot="public" static="no" strong="no">
        <type></type>
        <name>scl_buffer_dir_t</name>
        <enumvalue id="scl__buffer__api_8h_1a170d11659d05b9fae1041771132a52a0abf8bfee8fd4b7ba0441cf63af353c628" prot="public">
          <name>SCL_NETWORK_TX</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Transmit direction. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="scl__buffer__api_8h_1a170d11659d05b9fae1041771132a52a0a429fd371188f3dd267d8b7f078347479" prot="public">
          <name>SCL_NETWORK_RX</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Receive direction. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Indicates the transmit/receive direction that the buffer has been used for. </para>
        </briefdescription>
        <detaileddescription>
<para>This is needed if transmit/receive pools are separate. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_buffer_api.h" line="48" column="14" bodyfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_buffer_api.h" bodystart="48" bodyend="51"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="scl__buffer__api_8h_1ad46d8cab5cb70bcdbb7d1168c5a71976" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="scl__common_8h_1aa58a3303ad0c17b7a2d32b4b3f390ec4" kindref="member">scl_result_t</ref></type>
        <definition>scl_result_t scl_host_buffer_get</definition>
        <argsstring>(scl_buffer_t *buffer, scl_buffer_dir_t direction, uint16_t size, uint32_t wait)</argsstring>
        <name>scl_host_buffer_get</name>
        <param>
          <type><ref refid="scl__common_8h_1ade53c1ba949b59704f58c0c2d11d5421" kindref="member">scl_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="scl__buffer__api_8h_1a170d11659d05b9fae1041771132a52a0" kindref="member">scl_buffer_dir_t</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>wait</declname>
        </param>
        <briefdescription>
<para>Allocates the SCL buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>Attempts to allocate a buffer of the requested size. A buffer is either allocated from a static pool of memory or allocated dynamically.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer which receives the allocated buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates transmit/receive direction that the buffer is used for. This may be needed if transmit/receive pools are separate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes to allocate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wait</parametername>
</parameternamelist>
<parameterdescription>
<para>Time to wait for a buffer to be available in milli-seconds.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SCL_SUCCESS or Error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_buffer_api.h" line="69" column="14" declfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_buffer_api.h" declline="69" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="scl__buffer__api_8h_1a1275123a0b9434a2c3a2d64566269087" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void scl_buffer_release</definition>
        <argsstring>(scl_buffer_t buffer, scl_buffer_dir_t direction)</argsstring>
        <name>scl_buffer_release</name>
        <param>
          <type><ref refid="scl__common_8h_1ade53c1ba949b59704f58c0c2d11d5421" kindref="member">scl_buffer_t</ref></type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="scl__buffer__api_8h_1a170d11659d05b9fae1041771132a52a0" kindref="member">scl_buffer_dir_t</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>Releases the SCL buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used by SCL to indicate that it no longer requires the buffer. The buffer can then be released back into a pool for reuse or the dynamically allocated memory can be freed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to be released. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates the transmit/receive direction that the buffer has been used for. This might be needed if transmit/receive pools are separate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_buffer_api.h" line="83" column="6" declfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_buffer_api.h" declline="83" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="scl__buffer__api_8h_1aa19779310d2e60bf7037932f421ef514" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>uint8_t* scl_buffer_get_current_piece_data_pointer</definition>
        <argsstring>(scl_buffer_t buffer)</argsstring>
        <name>scl_buffer_get_current_piece_data_pointer</name>
        <param>
          <type><ref refid="scl__common_8h_1ade53c1ba949b59704f58c0c2d11d5421" kindref="member">scl_buffer_t</ref></type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Retrieves the pointer to the payload of the buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer whose payload pointer is to be retrieved.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the payload. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_buffer_api.h" line="91" column="9" declfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_buffer_api.h" declline="91" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="scl__buffer__api_8h_1ae9f16743fd6279a56c22f97335f379d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t scl_buffer_get_current_piece_size</definition>
        <argsstring>(scl_buffer_t buffer)</argsstring>
        <name>scl_buffer_get_current_piece_size</name>
        <param>
          <type><ref refid="scl__common_8h_1ade53c1ba949b59704f58c0c2d11d5421" kindref="member">scl_buffer_t</ref></type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Retrieves the size of the buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer whose size is to be retrieved.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The size of the buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_buffer_api.h" line="99" column="10" declfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_buffer_api.h" declline="99" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="scl__buffer__api_8h_1a6348a3e52d7fa865f660d89109635f23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="scl__common_8h_1aa58a3303ad0c17b7a2d32b4b3f390ec4" kindref="member">scl_result_t</ref></type>
        <definition>scl_result_t scl_buffer_set_size</definition>
        <argsstring>(scl_buffer_t buffer, uint16_t size)</argsstring>
        <name>scl_buffer_set_size</name>
        <param>
          <type><ref refid="scl__common_8h_1ade53c1ba949b59704f58c0c2d11d5421" kindref="member">scl_buffer_t</ref></type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Sets the current size of a SCL packet. </para>
        </briefdescription>
        <detaileddescription>
<para>Implemented in the port layer interface which is specific to the buffering scheme in use. This function sets the current length of a SCL packet buffer</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>: The packet to be modified </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>: The new size of the packet buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: SCL_SUCCESS or error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_buffer_api.h" line="112" column="14" declfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_buffer_api.h" declline="112" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="scl__buffer__api_8h_1ab17d2c8f26532113e650bdeef9c5ef5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="scl__common_8h_1aa58a3303ad0c17b7a2d32b4b3f390ec4" kindref="member">scl_result_t</ref></type>
        <definition>scl_result_t scl_buffer_add_remove_at_front</definition>
        <argsstring>(scl_buffer_t *buffer, int32_t add_remove_amount)</argsstring>
        <name>scl_buffer_add_remove_at_front</name>
        <param>
          <type><ref refid="scl__common_8h_1ade53c1ba949b59704f58c0c2d11d5421" kindref="member">scl_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>add_remove_amount</declname>
        </param>
        <briefdescription>
<para>Moves the current pointer of a packet buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>Implemented in the port layer interface which is specific to the buffering scheme in use.</para>
<para>Since packet buffers usually need to be created with space at the front for additional headers, this function allows SCL to move the current &apos;front&apos; location pointer so that it has space to add headers to transmit packets, and so that the network stack does not see the internal SCL headers on received packets.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>: A pointer to the handle of the current packet buffer for which the current pointer will be moved. On return this may contain a pointer to a newly allocated packet buffer which has been daisy chained to the front of the given one. This would be the case if the given packet buffer didn&apos;t have enough space at the front. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>add_remove_amount</parametername>
</parameternamelist>
<parameterdescription>
<para>: This is the number of bytes to move the current pointer of the packet buffer - a negative value increases the space for headers at the front of the packet, a positive value decreases the space.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: SCL_SUCCESS or error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_buffer_api.h" line="134" column="14" declfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_buffer_api.h" declline="134" declcolumn="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Provides declarations for buffer management functionality </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2018-2020<sp/>Cypress<sp/>Semiconductor<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor">#ifndef<sp/>_SCL_INTERNAL_BUFFER_API_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SCL_INTERNAL_BUFFER_API_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scl__types_8h" kindref="compound">scl_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scl__common_8h" kindref="compound">scl_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cy_utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;memp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pbuf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="37"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Constants</highlight></codeline>
<codeline lineno="38"><highlight class="comment">******************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Macros</highlight></codeline>
<codeline lineno="42"><highlight class="comment">******************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="45"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Structures<sp/>and<sp/>Enumerations</highlight></codeline>
<codeline lineno="46"><highlight class="comment">******************************************************/</highlight></codeline>
<codeline lineno="51"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scl__buffer__api_8h_1a170d11659d05b9fae1041771132a52a0abf8bfee8fd4b7ba0441cf63af353c628" kindref="member">SCL_NETWORK_TX</ref><sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scl__buffer__api_8h_1a170d11659d05b9fae1041771132a52a0a429fd371188f3dd267d8b7f078347479" kindref="member">SCL_NETWORK_RX</ref><sp/>=<sp/>1<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal">}<sp/><ref refid="scl__buffer__api_8h_1a170d11659d05b9fae1041771132a52a0" kindref="member">scl_buffer_dir_t</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="57"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Function<sp/>Prototypes</highlight></codeline>
<codeline lineno="58"><highlight class="comment">******************************************************/</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="scl__common_8h_1aa58a3303ad0c17b7a2d32b4b3f390ec4" kindref="member">scl_result_t</ref><sp/><ref refid="scl__buffer__api_8h_1ad46d8cab5cb70bcdbb7d1168c5a71976" kindref="member">scl_host_buffer_get</ref>(<ref refid="scl__common_8h_1ade53c1ba949b59704f58c0c2d11d5421" kindref="member">scl_buffer_t</ref><sp/>*buffer,<sp/><ref refid="scl__buffer__api_8h_1a170d11659d05b9fae1041771132a52a0" kindref="member">scl_buffer_dir_t</ref><sp/>direction,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>size,<sp/>uint32_t<sp/>wait);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="scl__buffer__api_8h_1a1275123a0b9434a2c3a2d64566269087" kindref="member">scl_buffer_release</ref>(<ref refid="scl__common_8h_1ade53c1ba949b59704f58c0c2d11d5421" kindref="member">scl_buffer_t</ref><sp/>buffer,<sp/><ref refid="scl__buffer__api_8h_1a170d11659d05b9fae1041771132a52a0" kindref="member">scl_buffer_dir_t</ref><sp/>direction);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">uint8_t<sp/>*<ref refid="scl__buffer__api_8h_1aa19779310d2e60bf7037932f421ef514" kindref="member">scl_buffer_get_current_piece_data_pointer</ref>(<ref refid="scl__common_8h_1ade53c1ba949b59704f58c0c2d11d5421" kindref="member">scl_buffer_t</ref><sp/>buffer);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">uint16_t<sp/><ref refid="scl__buffer__api_8h_1ae9f16743fd6279a56c22f97335f379d9" kindref="member">scl_buffer_get_current_piece_size</ref>(<ref refid="scl__common_8h_1ade53c1ba949b59704f58c0c2d11d5421" kindref="member">scl_buffer_t</ref><sp/>buffer);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><ref refid="scl__common_8h_1aa58a3303ad0c17b7a2d32b4b3f390ec4" kindref="member">scl_result_t</ref><sp/><ref refid="scl__buffer__api_8h_1a6348a3e52d7fa865f660d89109635f23" kindref="member">scl_buffer_set_size</ref>(<ref refid="scl__common_8h_1ade53c1ba949b59704f58c0c2d11d5421" kindref="member">scl_buffer_t</ref><sp/>buffer,<sp/>uint16_t<sp/>size);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><ref refid="scl__common_8h_1aa58a3303ad0c17b7a2d32b4b3f390ec4" kindref="member">scl_result_t</ref><sp/><ref refid="scl__buffer__api_8h_1ab17d2c8f26532113e650bdeef9c5ef5e" kindref="member">scl_buffer_add_remove_at_front</ref>(<ref refid="scl__common_8h_1ade53c1ba949b59704f58c0c2d11d5421" kindref="member">scl_buffer_t</ref><sp/>*buffer,<sp/>int32_t<sp/>add_remove_amount);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ifndef<sp/>_SCL_INTERNAL_BUFFER_API_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_buffer_api.h"/>
  </compounddef>
</doxygen>
