<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="scl__ipc_8h" kind="file" language="C++">
    <compoundname>scl_ipc.h</compoundname>
    <includes refid="scl__common_8h" local="yes">scl_common.h</includes>
    <includes local="yes">cy_device.h</includes>
    <includes local="yes">cy_sysint.h</includes>
    <includes local="yes">cy_ipc_drv.h</includes>
    <includes refid="scl__wifi__api_8h" local="yes">scl_wifi_api.h</includes>
    <includes local="yes">ip4_addr.h</includes>
    <incdepgraph>
      <node id="9">
        <label>stdbool.h</label>
      </node>
      <node id="8">
        <label>scl_wifi_api.h</label>
        <link refid="scl__wifi__api_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cy_sysint.h</label>
      </node>
      <node id="5">
        <label>cy_device.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="1">
        <label>scl_ipc.h</label>
        <link refid="scl__ipc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>scl_types.h</label>
        <link refid="scl__types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cy_result.h</label>
      </node>
      <node id="2">
        <label>scl_common.h</label>
        <link refid="scl__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ip4_addr.h</label>
      </node>
      <node id="7">
        <label>cy_ipc_drv.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structnetwork__params__t" prot="public">network_params_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="scl__ipc_8h_1ac490449db752a75710f408a086919b0c" prot="public" static="no">
        <name>INCLUDED_SCL_IPC_H</name>
        <briefdescription>
<para>include <ref refid="scl__ipc_8h" kindref="compound">scl_ipc.h</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" line="29" column="9" bodyfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scl__ipc_8h_1a19afb8bdb807699c1ee4afc56a0ca078" prot="public" static="no">
        <name>REG_IPC_STRUCT_DATA0</name>
        <param><defname>base</defname></param>
        <initializer>(((IPC_STRUCT_V2_Type*)(base))-&gt;DATA0)</initializer>
        <briefdescription>
<para>Hardware address of IPC_DATA0 register. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" line="42" column="9" bodyfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scl__ipc_8h_1a6788e80e528103971ca7827491d4dd86" prot="public" static="no">
        <name>TIMER_DEFAULT_VALUE</name>
        <initializer>(100)</initializer>
        <briefdescription>
<para>Default timeout value (in ms) for SCL operations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" line="46" column="9" bodyfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scl__ipc_8h_1a9d7167828e79659a9416cfa97c39a415" prot="public" static="no">
        <name>WIFI_ON_TIMEOUT</name>
        <initializer>(5000)</initializer>
        <briefdescription>
<para>Default timeout value (in ms) for Wi-Fi on. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" line="50" column="9" bodyfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scl__ipc_8h_1a857645445c8f87898c14135ec9c07814" prot="public" static="no">
        <name>NW_CONNECT_TIMEOUT</name>
        <initializer>(30)</initializer>
        <briefdescription>
<para>Default timeout value (in seconds) for Wi-Fi connection. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" line="54" column="9" bodyfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scl__ipc_8h_1afb7e03f043964993fdb3d15591d6e458" prot="public" static="no">
        <name>NW_DISCONNECT_TIMEOUT</name>
        <initializer>(30)</initializer>
        <briefdescription>
<para>Default timeout value (in seconds) for Wi-Fi disconnection. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" line="58" column="9" bodyfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scl__ipc_8h_1a335c0dd554fd890eb945a7daa99dd419" prot="public" static="no">
        <name>NW_DELAY_TIME_US</name>
        <initializer>(3000000)</initializer>
        <briefdescription>
<para>Default interval (in micro seconds) for polling the Network Processor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" line="62" column="9" bodyfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="scl__ipc_8h_1a9fec1f6a9b3f91e0171263391663f6ea" prot="public" static="no">
        <name>PARAM_LEN</name>
        <initializer>(20)</initializer>
        <briefdescription>
<para>Default parameter length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" line="66" column="9" bodyfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__communication_1gaa0e2decd5df1e776b053ddf33e7cd16d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="scl__common_8h_1aa58a3303ad0c17b7a2d32b4b3f390ec4" kindref="member">scl_result_t</ref></type>
        <definition>scl_result_t scl_init</definition>
        <argsstring>(void)</argsstring>
        <name>scl_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initializes the SCL thread and necessary artifacts. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>SCL_SUCCESS on successful initialization or SCL_ERROR otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" line="91" column="21" declfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" declline="91" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__communication_1ga4cf63cea8e5e196353b80d769b7182ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="scl__common_8h_1aa58a3303ad0c17b7a2d32b4b3f390ec4" kindref="member">scl_result_t</ref></type>
        <definition>scl_result_t scl_send_data</definition>
        <argsstring>(int index, char *buffer, uint32_t timeout)</argsstring>
        <name>scl_send_data</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Sends the SCL data and respective command to Network Processor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the command. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to be sent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum time (in ms) to wait for the Network Processor to release IPC channel.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SCL_SUCCESS on successful communication within SCL timeout duration or SCL_ERROR </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" line="101" column="21" declfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" declline="101" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__communication_1gad01b73140538bb57e28ad911dd62412f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="scl__common_8h_1aa58a3303ad0c17b7a2d32b4b3f390ec4" kindref="member">scl_result_t</ref></type>
        <definition>scl_result_t scl_end</definition>
        <argsstring>(void)</argsstring>
        <name>scl_end</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Terminates the SCL thread and disables the interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>SCL_SUCCESS on successful termination of SCL thread and disabling of interrupts or SCL_ERROR on timeout </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" line="107" column="21" declfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" declline="107" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__communication_1ga690f0ae086500cbc92390cb2c0d0a429" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="scl__common_8h_1aa58a3303ad0c17b7a2d32b4b3f390ec4" kindref="member">scl_result_t</ref></type>
        <definition>scl_result_t scl_get_nw_parameters</definition>
        <argsstring>(network_params_t *nw_param)</argsstring>
        <name>scl_get_nw_parameters</name>
        <param>
          <type><ref refid="structnetwork__params__t" kindref="compound">network_params_t</ref> *</type>
          <declname>nw_param</declname>
        </param>
        <briefdescription>
<para>Gets the network parameters like IP Address, Netmask, and Gateway from Network Processor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nw_param</parametername>
</parameternamelist>
<parameterdescription>
<para>structure pointer of type <emphasis><ref refid="structnetwork__params__t" kindref="compound">network_params_t</ref></emphasis> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SCL_SUCCESS on successful communication or SCL_ERROR </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" line="115" column="21" declfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" declline="115" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__communication_1gab1e0f13141ff3bac695f5d274cbd8457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void scl_process_events_from_np</definition>
        <argsstring>(const scl_event_header_t *event_header, const uint8_t *event_data, void *handler_user_data)</argsstring>
        <name>scl_process_events_from_np</name>
        <param>
          <type>const scl_event_header_t *</type>
          <declname>event_header</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>event_data</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handler_user_data</declname>
        </param>
        <briefdescription>
<para>Callback function that processes events from NP and sends it to the registered callbacks on CP. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event_header</parametername>
</parameternamelist>
<parameterdescription>
<para>structure pointer of type <emphasis>scl_event_header_t</emphasis> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event_data</parametername>
</parameternamelist>
<parameterdescription>
<para>event data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler_user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>semaphore data</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" line="125" column="13" declfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h" declline="125" declcolumn="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Provides SCL functionality to communicate with Network Processor </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2018-2020<sp/>Cypress<sp/>Semiconductor<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scl__common_8h" kindref="compound">scl_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cy_device.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cy_sysint.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cy_ipc_drv.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scl__wifi__api_8h" kindref="compound">scl_wifi_api.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ip4_addr.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDED_SCL_IPC_H<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_SCL_IPC_H<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Macros</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>******************************************************/</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor">#define<sp/>REG_IPC_STRUCT_DATA0(base)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((IPC_STRUCT_V2_Type*)(base))-&gt;DATA0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor">#define<sp/>TIMER_DEFAULT_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor">#define<sp/>WIFI_ON_TIMEOUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(5000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor">#define<sp/>NW_CONNECT_TIMEOUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(30)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor">#define<sp/>NW_DISCONNECT_TIMEOUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(30)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor">#define<sp/>NW_DELAY_TIME_US<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(3000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor">#define<sp/>PARAM_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="69"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Variables</highlight></codeline>
<codeline lineno="70"><highlight class="comment">******************************************************/</highlight></codeline>
<codeline lineno="74"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">network_params<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ip_address[<ref refid="scl__ipc_8h_1a9fec1f6a9b3f91e0171263391663f6ea" kindref="member">PARAM_LEN</ref>];<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>netmask[<ref refid="scl__ipc_8h_1a9fec1f6a9b3f91e0171263391663f6ea" kindref="member">PARAM_LEN</ref>];<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>gateway[<ref refid="scl__ipc_8h_1a9fec1f6a9b3f91e0171263391663f6ea" kindref="member">PARAM_LEN</ref>];<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>connection_status;<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal">}<sp/><ref refid="structnetwork__params__t" kindref="compound">network_params_t</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="82"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Function<sp/>Declarations</highlight></codeline>
<codeline lineno="83"><highlight class="comment">******************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="scl__common_8h_1aa58a3303ad0c17b7a2d32b4b3f390ec4" kindref="member">scl_result_t</ref><sp/><ref refid="group__communication_1gaa0e2decd5df1e776b053ddf33e7cd16d" kindref="member">scl_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="scl__common_8h_1aa58a3303ad0c17b7a2d32b4b3f390ec4" kindref="member">scl_result_t</ref><sp/><ref refid="group__communication_1ga4cf63cea8e5e196353b80d769b7182ff" kindref="member">scl_send_data</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/>uint32_t<sp/>timeout);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="scl__common_8h_1aa58a3303ad0c17b7a2d32b4b3f390ec4" kindref="member">scl_result_t</ref><sp/><ref refid="group__communication_1gad01b73140538bb57e28ad911dd62412f" kindref="member">scl_end</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="scl__common_8h_1aa58a3303ad0c17b7a2d32b4b3f390ec4" kindref="member">scl_result_t</ref><sp/><ref refid="group__communication_1ga690f0ae086500cbc92390cb2c0d0a429" kindref="member">scl_get_nw_parameters</ref>(<ref refid="structnetwork__params__t" kindref="compound">network_params_t</ref><sp/>*nw_param);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__communication_1gab1e0f13141ff3bac695f5d274cbd8457" kindref="member">scl_process_events_from_np</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scl_event_header_t<sp/>*event_header,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*event_data,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handler_user_data);</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ifndef<sp/>INCLUDED_SCL_IPC_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/scl_ipc.h"/>
  </compounddef>
</doxygen>
